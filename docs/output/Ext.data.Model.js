Ext.data.JsonP.Ext_data_Model({"tagname":"class","name":"Ext.data.Model","extends":"Ext.util.Stateful","mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"inheritable":null,"inheritdoc":null,"meta":{"author":["Ed Spencer"]},"private":null,"id":"class-Ext.data.Model","members":{"cfg":[{"name":"idProperty","tagname":"cfg","owner":"Ext.data.Model","meta":{},"id":"cfg-idProperty"},{"name":"listeners","tagname":"cfg","owner":"Ext.util.Observable","meta":{},"id":"cfg-listeners"},{"name":"persistanceProperty","tagname":"cfg","owner":"Ext.util.Stateful","meta":{},"id":"cfg-persistanceProperty"}],"property":[{"name":"dirty","tagname":"property","owner":"Ext.util.Stateful","meta":{},"id":"property-dirty"},{"name":"editing","tagname":"property","owner":"Ext.util.Stateful","meta":{},"id":"property-editing"},{"name":"eventOptionsRe","tagname":"property","owner":"Ext.util.Observable","meta":{"private":true},"id":"property-eventOptionsRe"},{"name":"evented","tagname":"property","owner":"Ext.data.Model","meta":{"private":true},"id":"property-evented"},{"name":"internalId","tagname":"property","owner":"Ext.data.Model","meta":{"private":true},"id":"property-internalId"},{"name":"isModel","tagname":"property","owner":"Ext.data.Model","meta":{"private":true},"id":"property-isModel"},{"name":"isObservable","tagname":"property","owner":"Ext.util.Observable","meta":{"private":true},"id":"property-isObservable"},{"name":"modified","tagname":"property","owner":"Ext.util.Stateful","meta":{},"id":"property-modified"},{"name":"phantom","tagname":"property","owner":"Ext.data.Model","meta":{},"id":"property-phantom"},{"name":"store","tagname":"property","owner":"Ext.data.Model","meta":{},"id":"property-store"}],"method":[{"name":"constructor","tagname":"method","owner":"Ext.data.Model","meta":{},"id":"method-constructor"},{"name":"addEvents","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-addEvents"},{"name":"addListener","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-addListener"},{"name":"addManagedListener","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-addManagedListener"},{"name":"afterCommit","tagname":"method","owner":"Ext.data.Model","meta":{"private":true},"id":"method-afterCommit"},{"name":"afterEdit","tagname":"method","owner":"Ext.data.Model","meta":{"private":true},"id":"method-afterEdit"},{"name":"afterReject","tagname":"method","owner":"Ext.data.Model","meta":{"private":true},"id":"method-afterReject"},{"name":"callStore","tagname":"method","owner":"Ext.data.Model","meta":{"private":true},"id":"method-callStore"},{"name":"clearListeners","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-clearListeners"},{"name":"clearManagedListeners","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-clearManagedListeners"},{"name":"commit","tagname":"method","owner":"Ext.util.Stateful","meta":{},"id":"method-commit"},{"name":"copy","tagname":"method","owner":"Ext.util.Stateful","meta":{},"id":"method-copy"},{"name":"enableBubble","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-enableBubble"},{"name":"fireEvent","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-fireEvent"},{"name":"get","tagname":"method","owner":"Ext.util.Stateful","meta":{},"id":"method-get"},{"name":"getChanges","tagname":"method","owner":"Ext.util.Stateful","meta":{},"id":"method-getChanges"},{"name":"getId","tagname":"method","owner":"Ext.data.Model","meta":{},"id":"method-getId"},{"name":"getProxy","tagname":"method","owner":"Ext.data.Model","meta":{},"id":"method-getProxy"},{"name":"hasListener","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-hasListener"},{"name":"id","tagname":"method","owner":"Ext.data.Model","meta":{},"id":"method-id"},{"name":"isModified","tagname":"method","owner":"Ext.util.Stateful","meta":{},"id":"method-isModified"},{"name":"join","tagname":"method","owner":"Ext.data.Model","meta":{},"id":"method-join"},{"name":"markDirty","tagname":"method","owner":"Ext.util.Stateful","meta":{"private":true},"id":"method-markDirty"},{"name":"on","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-on"},{"name":"purgeListeners","tagname":"method","owner":"Ext.util.Observable","meta":{"private":true},"id":"method-purgeListeners"},{"name":"purgeManagedListeners","tagname":"method","owner":"Ext.util.Observable","meta":{"private":true},"id":"method-purgeManagedListeners"},{"name":"reject","tagname":"method","owner":"Ext.util.Stateful","meta":{},"id":"method-reject"},{"name":"relayEvents","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-relayEvents"},{"name":"removeListener","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-removeListener"},{"name":"removeManagedListener","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-removeManagedListener"},{"name":"resumeEvents","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-resumeEvents"},{"name":"save","tagname":"method","owner":"Ext.data.Model","meta":{},"id":"method-save"},{"name":"set","tagname":"method","owner":"Ext.util.Stateful","meta":{},"id":"method-set"},{"name":"setDirty","tagname":"method","owner":"Ext.util.Stateful","meta":{},"id":"method-setDirty"},{"name":"setId","tagname":"method","owner":"Ext.data.Model","meta":{},"id":"method-setId"},{"name":"setProxy","tagname":"method","owner":"Ext.data.Model","meta":{},"id":"method-setProxy"},{"name":"suspendEvents","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-suspendEvents"},{"name":"un","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-un"},{"name":"unjoin","tagname":"method","owner":"Ext.data.Model","meta":{},"id":"method-unjoin"},{"name":"validate","tagname":"method","owner":"Ext.data.Model","meta":{},"id":"method-validate"}],"event":[],"css_var":[],"css_mixin":[]},"statics":{"cfg":[],"property":[],"method":[{"name":"load","tagname":"method","owner":"Ext.data.Model","meta":{"static":true},"id":"static-method-load"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":7384,"files":[{"filename":"sencha-touch-debug-w-comments.js","href":"sencha-touch-debug-w-comments.html#Ext-data-Model"}],"html_meta":{"author":null},"component":false,"superclasses":["Ext.util.Observable","Ext.util.Stateful"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='docClass'>Ext.util.Observable</a><div class='subclass '><a href='#!/api/Ext.util.Stateful' rel='Ext.util.Stateful' class='docClass'>Ext.util.Stateful</a><div class='subclass '><strong>Ext.data.Model</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model' target='_blank'>sencha-touch-debug-w-comments.js</a></div></pre><div class='doc-contents'><p>A Model represents some object that your application manages. For example, one might define a Model for Users, Products,\nCars, or any other real-world object that we want to model in the system. Models are registered via the <a href=\"#!/api/Ext.ModelMgr\" rel=\"Ext.ModelMgr\" class=\"docClass\">model manager</a>,\nand are used by <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">stores</a>, which are in turn used by many of the data-bound components in Ext.</p>\n\n\n\n\n<p>Models are defined as a set of fields and any arbitrary methods and properties relevant to the model. For example:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-regModel\" rel=\"Ext-method-regModel\" class=\"docClass\">Ext.regModel</a>('User', {\n    fields: [\n        {name: 'name',  type: 'string'},\n        {name: 'age',   type: 'int'},\n        {name: 'phone', type: 'string'},\n        {name: 'alive', type: 'boolean', defaultValue: true}\n    ],\n\n    changeName: function() {\n        var oldName = this.get('name'),\n            newName = oldName + \" The Barbarian\";\n\n        this.set('name', newName);\n    }\n});\n</code></pre>\n\n\n\n\n<p>The fields array is turned into a <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">MixedCollection</a> automatically by the <a href=\"#!/api/Ext.ModelMgr\" rel=\"Ext.ModelMgr\" class=\"docClass\">ModelMgr</a>, and all\nother functions and properties are copied to the new Model's prototype.</p>\n\n\n\n\n<p>Now we can create instances of our User model and call any model logic we defined:</p>\n\n\n\n\n<pre><code>var user = <a href=\"#!/api/Ext.ModelMgr-method-create\" rel=\"Ext.ModelMgr-method-create\" class=\"docClass\">Ext.ModelMgr.create</a>({\n    name : 'Conan',\n    age  : 24,\n    phone: '555-555-5555'\n}, 'User');\n\nuser.changeName();\nuser.get('name'); //returns \"Conan The Barbarian\"\n</code></pre>\n\n\n\n\n<p><u>Validations</u></p>\n\n\n\n\n<p>Models have built-in support for validations, which are executed against the validator functions in \n<a href=\"#!/api/Ext.data.validations\" rel=\"Ext.data.validations\" class=\"docClass\">Ext.data.validations</a> (<a href=\"#!/api/Ext.data.validations\" rel=\"Ext.data.validations\" class=\"docClass\">see all validation functions</a>). Validations are easy to add to models:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-regModel\" rel=\"Ext-method-regModel\" class=\"docClass\">Ext.regModel</a>('User', {\n    fields: [\n        {name: 'name',     type: 'string'},\n        {name: 'age',      type: 'int'},\n        {name: 'phone',    type: 'string'},\n        {name: 'gender',   type: 'string'},\n        {name: 'username', type: 'string'},\n        {name: 'alive',    type: 'boolean', defaultValue: true}\n    ],\n\n    validations: [\n        {type: 'presence',  field: 'age'},\n        {type: 'length',    field: 'name',     min: 2},\n        {type: 'inclusion', field: 'gender',   list: ['Male', 'Female']},\n        {type: 'exclusion', field: 'username', list: ['Admin', 'Operator']},\n        {type: 'format',    field: 'username', matcher: /([a-z]+)[0-9]{2,3}/}\n    ]\n});\n</code></pre>\n\n\n\n\n<p>The validations can be run by simply calling the <a href=\"#!/api/Ext.data.Model-method-validate\" rel=\"Ext.data.Model-method-validate\" class=\"docClass\">validate</a> function, which returns a <a href=\"#!/api/Ext.data.Errors\" rel=\"Ext.data.Errors\" class=\"docClass\">Ext.data.Errors</a>\nobject:</p>\n\n\n\n\n<pre><code>var instance = <a href=\"#!/api/Ext.ModelMgr-method-create\" rel=\"Ext.ModelMgr-method-create\" class=\"docClass\">Ext.ModelMgr.create</a>({\n    name: 'Ed',\n    gender: 'Male',\n    username: 'edspencer'\n}, 'User');\n\nvar errors = instance.validate();\n</code></pre>\n\n\n\n\n<p><u>Associations</u></p>\n\n\n\n\n<p>Models can have associations with other Models via <a href=\"#!/api/Ext.data.BelongsToAssociation\" rel=\"Ext.data.BelongsToAssociation\" class=\"docClass\">belongsTo</a> and \n<a href=\"#!/api/Ext.data.HasManyAssociation\" rel=\"Ext.data.HasManyAssociation\" class=\"docClass\">hasMany</a> associations. For example, let's say we're writing a blog administration\napplication which deals with Users, Posts and Comments. We can express the relationships between these models like this:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-regModel\" rel=\"Ext-method-regModel\" class=\"docClass\">Ext.regModel</a>('Post', {\n    fields: ['id', 'user_id'],\n\n    belongsTo: 'User',\n    hasMany  : {model: 'Comment', name: 'comments'}\n});\n\n<a href=\"#!/api/Ext-method-regModel\" rel=\"Ext-method-regModel\" class=\"docClass\">Ext.regModel</a>('Comment', {\n    fields: ['id', 'user_id', 'post_id'],\n\n    belongsTo: 'Post'\n});\n\n<a href=\"#!/api/Ext-method-regModel\" rel=\"Ext-method-regModel\" class=\"docClass\">Ext.regModel</a>('User', {\n    fields: ['id'],\n\n    hasMany: [\n        'Post',\n        {model: 'Comment', name: 'comments'}\n    ]\n});\n</code></pre>\n\n\n\n\n<p>See the docs for <a href=\"#!/api/Ext.data.BelongsToAssociation\" rel=\"Ext.data.BelongsToAssociation\" class=\"docClass\">Ext.data.BelongsToAssociation</a> and <a href=\"#!/api/Ext.data.HasManyAssociation\" rel=\"Ext.data.HasManyAssociation\" class=\"docClass\">Ext.data.HasManyAssociation</a> for details on the usage\nand configuration of associations. Note that associations can also be specified like this:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-regModel\" rel=\"Ext-method-regModel\" class=\"docClass\">Ext.regModel</a>('User', {\n    fields: ['id'],\n\n    associations: [\n        {type: 'hasMany', model: 'Post',    name: 'posts'},\n        {type: 'hasMany', model: 'Comment', name: 'comments'}\n    ]\n});\n</code></pre>\n\n\n\n\n<p><u>Using a Proxy</u></p>\n\n\n\n\n<p>Models are great for representing types of data and relationships, but sooner or later we're going to want to \nload or save that data somewhere. All loading and saving of data is handled via a <a href=\"#!/api/Ext.data.Proxy\" rel=\"Ext.data.Proxy\" class=\"docClass\">Proxy</a>, \nwhich can be set directly on the Model:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-regModel\" rel=\"Ext-method-regModel\" class=\"docClass\">Ext.regModel</a>('User', {\n    fields: ['id', 'name', 'email'],\n\n    proxy: {\n        type: 'rest',\n        url : '/users'\n    }\n});\n</code></pre>\n\n\n\n\n<p>Here we've set up a <a href=\"#!/api/Ext.data.RestProxy\" rel=\"Ext.data.RestProxy\" class=\"docClass\">Rest Proxy</a>, which knows how to load and save data to and from a \nRESTful backend. Let's see how this works:</p>\n\n\n\n\n<pre><code>var user = <a href=\"#!/api/Ext.ModelMgr-method-create\" rel=\"Ext.ModelMgr-method-create\" class=\"docClass\">Ext.ModelMgr.create</a>({name: 'Ed Spencer', email: 'ed@sencha.com'}, 'User');\n\nuser.save(); //POST /users\n</code></pre>\n\n\n\n\n<p>Calling <a href=\"#!/api/Ext.data.Model-method-save\" rel=\"Ext.data.Model-method-save\" class=\"docClass\">save</a> on the new Model instance tells the configured RestProxy that we wish to persist this \nModel's data onto our server. RestProxy figures out that this Model hasn't been saved before because it doesn't\nhave an id, and performs the appropriate action - in this case issuing a POST request to the url we configured\n(/users). We configure any Proxy on any Model and always follow this API - see <a href=\"#!/api/Ext.data.Proxy\" rel=\"Ext.data.Proxy\" class=\"docClass\">Ext.data.Proxy</a> for a full\nlist.</p>\n\n\n\n\n<p>Loading data via the Proxy is equally easy:</p>\n\n\n\n\n<pre><code>//get a reference to the User model class\nvar User = <a href=\"#!/api/Ext.ModelMgr-method-getModel\" rel=\"Ext.ModelMgr-method-getModel\" class=\"docClass\">Ext.ModelMgr.getModel</a>('User');\n\n//Uses the configured RestProxy to make a GET request to /users/123\nUser.load(123, {\n    success: function(user) {\n        console.log(user.getId()); //logs 123\n    }\n});\n</code></pre>\n\n\n\n\n<p>Models can also be updated and destroyed easily:</p>\n\n\n\n\n<pre><code>//the user Model we loaded in the last snippet:\nuser.set('name', 'Edward Spencer');\n\n//tells the Proxy to save the Model. In this case it will perform a PUT request to /users/123 as this Model already has an id\nuser.save({\n    success: function() {\n        console.log('The User was updated');\n    }\n});\n\n//tells the Proxy to destroy the Model. Performs a DELETE request to /users/123\nuser.destroy({\n    success: function() {\n        console.log('The User was destroyed!');\n    }\n});\n</code></pre>\n\n\n\n\n<p><u>Usage in Stores</u></p>\n\n\n\n\n<p>It is very common to want to load a set of Model instances to be displayed and manipulated in the UI. We do this \nby creating a <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Store</a>:</p>\n\n\n\n\n<pre><code>var store = new <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>({\n    model: 'User'\n});\n\n//uses the Proxy we set up on Model to load the Store data\nstore.load();\n</code></pre>\n\n\n\n\n<p>A Store is just a collection of Model instances - usually loaded from a server somewhere. Store can also maintain\na set of added, updated and removed Model instances to be synchronized with the server via the Proxy. See the\n<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Store docs</a> for more information on Stores.</p>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-idProperty' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-cfg-idProperty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-cfg-idProperty' class='name expandable'>idProperty</a><span> : String</span></div><div class='description'><div class='short'>The name of the field treated as this Model's unique id (defaults to 'id'). ...</div><div class='long'><p>The name of the field treated as this Model's unique id (defaults to 'id').</p>\n<p>Defaults to: <code>'id'</code></p></div></div></div><div id='cfg-listeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-cfg-listeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-cfg-listeners' class='name expandable'>listeners</a><span> : Object</span></div><div class='description'><div class='short'>(optional) A config object containing one or more event handlers to be added to this\nobject during initialization. ...</div><div class='long'><p>(optional) <p>A config object containing one or more event handlers to be added to this\nobject during initialization.  This should be a valid listeners config object as specified in the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching multiple handlers at once.</p></p>\n\n<br><p><b><u>DOM events from ExtJs <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></u></b></p>\n\n\n<br><p>While <i>some</i> ExtJs Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this\n\n\n<p>is usually only done when extra value can be added. For example the <a href=\"#!/api/Ext.DataView\" rel=\"Ext.DataView\" class=\"docClass\">DataView</a>'s\n<b><code>click</code></b> event passing the node clicked on. To access DOM\nevents directly from a child element of a Component, we need to specify the <code>element</code> option to\nidentify the Component property to add a DOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.Panel\" rel=\"Ext.Panel\" class=\"docClass\">Ext.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n\n\n<p></p></p>\n</div></div></div><div id='cfg-persistanceProperty' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Stateful' rel='Ext.util.Stateful' class='defined-in docClass'>Ext.util.Stateful</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Stateful-cfg-persistanceProperty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Stateful-cfg-persistanceProperty' class='name expandable'>persistanceProperty</a><span> : String</span></div><div class='description'><div class='short'>The property on this Persistable object that its data is saved to. ...</div><div class='long'><p>The property on this Persistable object that its data is saved to.\nDefaults to 'data' (e.g. all persistable data resides in this.data.)</p>\n<p>Defaults to: <code>'data'</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-dirty' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Stateful' rel='Ext.util.Stateful' class='defined-in docClass'>Ext.util.Stateful</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Stateful-property-dirty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Stateful-property-dirty' class='name expandable'>dirty</a><span> : Boolean</span></div><div class='description'><div class='short'>Readonly flag - true if this Record has been modified. ...</div><div class='long'><p>Readonly flag - true if this Record has been modified.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-editing' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Stateful' rel='Ext.util.Stateful' class='defined-in docClass'>Ext.util.Stateful</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Stateful-property-editing' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Stateful-property-editing' class='name expandable'>editing</a><span> : Boolean</span></div><div class='description'><div class='short'>Internal flag used to track whether or not the model instance is currently being edited. ...</div><div class='long'><p>Internal flag used to track whether or not the model instance is currently being edited. Read-only</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-eventOptionsRe' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-property-eventOptionsRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-property-eventOptionsRe' class='name expandable'>eventOptionsRe</a><span> : RegExp</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>/^(?:scope|delay|buffer|single|stopEvent|preventDefault|stopPropagation|normalized|args|delegate|element|vertical|horizontal)$/</code></p></div></div></div><div id='property-evented' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-property-evented' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-property-evented' class='name expandable'>evented</a><span> : Boolean</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-internalId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-property-internalId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-property-internalId' class='name not-expandable'>internalId</a><span> : String</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'><p>An internal unique ID for each Model instance, used to identify Models that don't have an ID yet</p>\n</div><div class='long'><p>An internal unique ID for each Model instance, used to identify Models that don't have an ID yet</p>\n</div></div></div><div id='property-isModel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-property-isModel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-property-isModel' class='name expandable'>isModel</a><span> : Boolean</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-isObservable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-property-isObservable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-property-isObservable' class='name expandable'>isObservable</a><span> : Boolean</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-modified' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Stateful' rel='Ext.util.Stateful' class='defined-in docClass'>Ext.util.Stateful</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Stateful-property-modified' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Stateful-property-modified' class='name not-expandable'>modified</a><span> : Object</span></div><div class='description'><div class='short'><p>Key: value pairs of all fields whose values have changed</p>\n</div><div class='long'><p>Key: value pairs of all fields whose values have changed</p>\n</div></div></div><div id='property-phantom' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-property-phantom' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-property-phantom' class='name expandable'>phantom</a><span> : Boolean</span></div><div class='description'><div class='short'>true when the record does not yet exist in a server-side database (see\nsetDirty). ...</div><div class='long'><p><tt>true</tt> when the record does not yet exist in a server-side database (see\n<a href=\"#!/api/Ext.data.Model-method-setDirty\" rel=\"Ext.data.Model-method-setDirty\" class=\"docClass\">setDirty</a>).  Any record which has a real database pk set as its id property\nis NOT a phantom -- it's real.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-store' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-property-store' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-property-store' class='name not-expandable'>store</a><span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a></span></div><div class='description'><div class='short'><p>The <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> to which this Record belongs.</p>\n</div><div class='long'><p>The <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> to which this Record belongs.</p>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Ext.data.Model-method-constructor' class='name expandable'>Ext.data.Model</a>( <span class='pre'>Object data, Number id</span> ) : Object</div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Object<div class='sub-desc'><p>An object containing keys corresponding to this model's fields, and their associated values</p>\n</div></li><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>Optional unique ID to assign to this model instance</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.util.Stateful-method-constructor' rel='Ext.util.Stateful-method-constructor' class='docClass'>Ext.util.Stateful.constructor</a></p></div></div></div><div id='method-addEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-addEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-addEvents' class='name expandable'>addEvents</a>( <span class='pre'>Object|String o, string Optional</span> )</div><div class='description'><div class='short'>Adds the specified events to the list of events which this Observable may fire. ...</div><div class='long'><p>Adds the specified events to the list of events which this Observable may fire.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object|String<div class='sub-desc'><p>Either an object with event names as properties with a value of <code>true</code>\nor the first event name string if multiple event names are being passed as separate parameters.</p>\n</div></li><li><span class='pre'>Optional</span> : string<div class='sub-desc'><p>. Event name if multiple event names are being passed as separate parameters.\nUsage:</p>\n\n<pre><code>this.addEvents('storeloaded', 'storecleared');\n</code></pre>\n\n</div></li></ul></div></div></div><div id='method-addListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-addListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-addListener' class='name expandable'>addListener</a>( <span class='pre'>String eventName, Function handler, [Object scope], [Object options]</span> )</div><div class='description'><div class='short'>Appends an event handler to this object. ...</div><div class='long'><p>Appends an event handler to this object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the event to listen for. May also be an object who's property names are event names. See</p>\n\n</div></li><li><span class='pre'>handler</span> : Function<div class='sub-desc'><p>The method the event invokes.</p>\n\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (<code><b>this</b></code> reference) in which the handler function is executed.\n<b>If omitted, defaults to the object which fired the event.</b></p>\n\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>An object containing handler configuration.\nproperties. This may contain any of the following properties:<ul>\n<li><b>scope</b> : Object<div class=\"sub-desc\">The scope (<code><b>this</b></code> reference) in which the handler function is executed.\n<b>If omitted, defaults to the object which fired the event.</b></div></li>\n<li><b>delay</b> : Number<div class=\"sub-desc\">The number of milliseconds to delay the invocation of the handler after the event fires.</div></li>\n<li><b>single</b> : Boolean<div class=\"sub-desc\">True to add a handler to handle just the next firing of the event, and then remove itself.</div></li>\n<li><b>buffer</b> : Number<div class=\"sub-desc\">Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\nby the specified number of milliseconds. If the event fires again within that time, the original\nhandler is <em>not</em> invoked, but the new handler is scheduled in its place.</div></li>\n<li><b>target</b> : Observable<div class=\"sub-desc\">Only call the handler if the event was fired on the target Observable, <i>not</i>\nif the event was bubbled up from a child Observable.</div></li>\n<li><b>element</b> : String<div class=\"sub-desc\"><b>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</b>\nThe name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>This option is useful during Component construction to add DOM event listeners to elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which\nwill exist only after the Component is rendered. For example, to add a click listener to a Panel's body:\n<pre><code>new <a href=\"#!/api/Ext.Panel\" rel=\"Ext.Panel\" class=\"docClass\">Ext.Panel</a>({\n    title: 'The title',\n    listeners: {\n        click: this.handlePanelClick,\n        element: 'body'\n    }\n});\n</code></pre></p>\n\n\n\n\n<p>When added in this way, the options available are the options applicable to <a href=\"#!/api/Ext.Element-method-addListener\" rel=\"Ext.Element-method-addListener\" class=\"docClass\">Ext.Element.addListener</a></p>\n\n\n\n\n<p></div></li>\n</ul><br></p>\n\n\n\n\n<p>\n<b>Combining Options</b><br>\nUsing the options argument, it is possible to combine different types of listeners:<br>\n<br>\nA delayed, one-time listener.\n<pre><code>myPanel.on('hide', this.handleClick, this, {\nsingle: true,\ndelay: 100\n});</code></pre>\n<p>\n<b>Attaching multiple handlers in 1 call</b><br>\nThe method also allows for a single argument to be passed which is a config object containing properties\nwhich specify multiple events. For example:\n<pre><code>myGridPanel.on({\n    cellClick: this.onCellClick,\n    mouseover: this.onMouseOver,\n    mouseout: this.onMouseOut,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>.\n<p>\n\n</div></li></ul></div></div></div><div id='method-addManagedListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-addManagedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-addManagedListener' class='name expandable'>addManagedListener</a>( <span class='pre'>Observable|Element item, Object|String ename, Function fn, Object scope, Object opt</span> )</div><div class='description'><div class='short'>Adds listeners to any Observable object (or Element) which are automatically removed when this Component\nis destroyed. ...</div><div class='long'><p>Adds listeners to any Observable object (or Element) which are automatically removed when this Component\nis destroyed.\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : Observable|Element<div class='sub-desc'><p>The item to which to add a listener/listeners.</p>\n</div></li><li><span class='pre'>ename</span> : Object|String<div class='sub-desc'><p>The event name, or an object containing event name properties.</p>\n</div></li><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>Optional. If the <code>ename</code> parameter was an event name, this\nis the handler function.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>Optional. If the <code>ename</code> parameter was an event name, this\nis the scope (<code>this</code> reference) in which the handler function is executed.</p>\n</div></li><li><span class='pre'>opt</span> : Object<div class='sub-desc'><p>Optional. If the <code>ename</code> parameter was an event name, this\nis the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n</div></li></ul></div></div></div><div id='method-afterCommit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-method-afterCommit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-method-afterCommit' class='name expandable'>afterCommit</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>If this Model instance has been joined to a store, the store's\nafterCommit method is called ...</div><div class='long'><p>If this Model instance has been <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a> to a <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">store</a>, the store's\nafterCommit method is called</p>\n</div></div></div><div id='method-afterEdit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-method-afterEdit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-method-afterEdit' class='name expandable'>afterEdit</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>If this Model instance has been joined to a store, the store's\nafterEdit method is called ...</div><div class='long'><p>If this Model instance has been <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a> to a <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">store</a>, the store's\nafterEdit method is called</p>\n</div></div></div><div id='method-afterReject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-method-afterReject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-method-afterReject' class='name expandable'>afterReject</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>If this Model instance has been joined to a store, the store's\nafterReject method is called ...</div><div class='long'><p>If this Model instance has been <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a> to a <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">store</a>, the store's\nafterReject method is called</p>\n</div></div></div><div id='method-callStore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-method-callStore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-method-callStore' class='name expandable'>callStore</a>( <span class='pre'>String fn</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Helper function used by afterEdit, afterReject and afterCommit. ...</div><div class='long'><p>Helper function used by afterEdit, afterReject and afterCommit. Calls the given method on the\n<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">store</a> that this instance has <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a>, if any. The store function\nwill always be called with the model instance as its single argument.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : String<div class='sub-desc'><p>The function to call on the store</p>\n</div></li></ul></div></div></div><div id='method-clearListeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-clearListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-clearListeners' class='name expandable'>clearListeners</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Removes all listeners for this object including the managed listeners ...</div><div class='long'><p>Removes all listeners for this object including the managed listeners</p>\n</div></div></div><div id='method-clearManagedListeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-clearManagedListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-clearManagedListeners' class='name expandable'>clearManagedListeners</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Removes all managed listeners for this object. ...</div><div class='long'><p>Removes all managed listeners for this object.</p>\n</div></div></div><div id='method-commit' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Stateful' rel='Ext.util.Stateful' class='defined-in docClass'>Ext.util.Stateful</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Stateful-method-commit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Stateful-method-commit' class='name expandable'>commit</a>( <span class='pre'>[Boolean silent]</span> )</div><div class='description'><div class='short'>Usually called by the Ext.data.Store which owns the model instance. ...</div><div class='long'><p>Usually called by the <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> which owns the model instance.\nCommits all changes made to the instance since either creation or the last commit operation.</p>\n\n<p>Developers should subscribe to the <a href=\"#!/api/Ext.data.Store-event-update\" rel=\"Ext.data.Store-event-update\" class=\"docClass\">Ext.data.Store.update</a> event\nto have their code notified of commit operations.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>silent</span> : Boolean (optional)<div class='sub-desc'><p>True to skip notification of the owning\nstore of the change (defaults to false)</p>\n</div></li></ul></div></div></div><div id='method-copy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Stateful' rel='Ext.util.Stateful' class='defined-in docClass'>Ext.util.Stateful</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Stateful-method-copy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Stateful-method-copy' class='name expandable'>copy</a>( <span class='pre'>[String id]</span> ) : Record</div><div class='description'><div class='short'>Creates a copy (clone) of this Model instance. ...</div><div class='long'><p>Creates a copy (clone) of this Model instance.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String (optional)<div class='sub-desc'><p>A new id, defaults to the id\nof the instance being copied. See <code>id</code>.\nTo generate a phantom instance with a new id use:</p>\n\n<pre><code>var rec = record.copy(); // clone the record\n<a href=\"#!/api/Ext.data.Model-method-id\" rel=\"Ext.data.Model-method-id\" class=\"docClass\">Ext.data.Model.id</a>(rec); // automatically generate a unique sequential id\n</code></pre>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Record</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-enableBubble' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-enableBubble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-enableBubble' class='name expandable'>enableBubble</a>( <span class='pre'>String/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> events</span> )</div><div class='description'><div class='short'>Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubbleTarget() if present. ...</div><div class='long'><p>Enables events fired by this Observable to bubble up an owner hierarchy by calling\n<code>this.getBubbleTarget()</code> if present. There is no implementation in the Observable base class.</p>\n\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers. See Ext.Component.getBubbleTarget. The default\nimplementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> returns the Component's immediate owner. But if a known target is required, this can be overridden to\naccess the required target more quickly.</p>\n\n\n<p>Example:</p>\n\n\n<pre><code><a href=\"#!/api/Ext-method-override\" rel=\"Ext-method-override\" class=\"docClass\">Ext.override</a>(<a href=\"#!/api/Ext.form.Field\" rel=\"Ext.form.Field\" class=\"docClass\">Ext.form.Field</a>, {\n//  Add functionality to Field&#39;s initComponent to enable the change event to bubble\ninitComponent : Ext.createSequence(Ext.form.Field.prototype.initComponent, function() {\n    this.enableBubble('change');\n}),\n\n//  We know that we want Field&#39;s events to bubble directly to the FormPanel.\ngetBubbleTarget : function() {\n    if (!this.formPanel) {\n        this.formPanel = this.findParentByType('form');\n    }\n    return this.formPanel;\n}\n});\n\nvar myForm = new Ext.formPanel({\ntitle: 'User Details',\nitems: [{\n    ...\n}],\nlisteners: {\n    change: function() {\n        // Title goes red if form has been modified.\n        myForm.header.setStyle('color', 'red');\n    }\n}\n});\n</code></pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>events</span> : String/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>The event name to bubble, or an Array of event names.</p>\n</div></li></ul></div></div></div><div id='method-fireEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-fireEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-fireEvent' class='name expandable'>fireEvent</a>( <span class='pre'>String eventName, Object... args</span> ) : Boolean</div><div class='description'><div class='short'>Fires the specified event with the passed parameters (minus the event name). ...</div><div class='long'><p>Fires the specified event with the passed parameters (minus the event name).</p>\n\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>)\nby calling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the event to fire.</p>\n\n</div></li><li><span class='pre'>args</span> : Object...<div class='sub-desc'><p>Variable number of parameters are passed to handlers.</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>returns false if any of the handlers return false otherwise it returns true.</p>\n\n</div></li></ul></div></div></div><div id='method-get' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Stateful' rel='Ext.util.Stateful' class='defined-in docClass'>Ext.util.Stateful</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Stateful-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Stateful-method-get' class='name expandable'>get</a>( <span class='pre'>String fieldName</span> ) : Mixed</div><div class='description'><div class='short'>Returns the value of the given field ...</div><div class='long'><p>Returns the value of the given field</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fieldName</span> : String<div class='sub-desc'><p>The field to fetch the value for</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Mixed</span><div class='sub-desc'><p>The value</p>\n</div></li></ul></div></div></div><div id='method-getChanges' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Stateful' rel='Ext.util.Stateful' class='defined-in docClass'>Ext.util.Stateful</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Stateful-method-getChanges' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Stateful-method-getChanges' class='name expandable'>getChanges</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Gets a hash of only the fields that have been modified since this Model was created or commited. ...</div><div class='long'><p>Gets a hash of only the fields that have been modified since this Model was created or commited.</p>\n</div></div></div><div id='method-getId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-method-getId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-method-getId' class='name expandable'>getId</a>( <span class='pre'></span> ) : Number</div><div class='description'><div class='short'>Returns the unique ID allocated to this model instance as defined by idProperty ...</div><div class='long'><p>Returns the unique ID allocated to this model instance as defined by <a href=\"#!/api/Ext.data.Model-cfg-idProperty\" rel=\"Ext.data.Model-cfg-idProperty\" class=\"docClass\">idProperty</a></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The id</p>\n</div></li></ul></div></div></div><div id='method-getProxy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-method-getProxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-method-getProxy' class='name expandable'>getProxy</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.data.Proxy\" rel=\"Ext.data.Proxy\" class=\"docClass\">Ext.data.Proxy</a></div><div class='description'><div class='short'>Returns the configured Proxy for this Model ...</div><div class='long'><p>Returns the configured Proxy for this Model</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Proxy\" rel=\"Ext.data.Proxy\" class=\"docClass\">Ext.data.Proxy</a></span><div class='sub-desc'><p>The proxy</p>\n</div></li></ul></div></div></div><div id='method-hasListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-hasListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-hasListener' class='name expandable'>hasListener</a>( <span class='pre'>String eventName</span> ) : Boolean</div><div class='description'><div class='short'>Checks to see if this object has any listeners for a specified event ...</div><div class='long'><p>Checks to see if this object has any listeners for a specified event</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the event to check for</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the event is being listened for, else false</p>\n</div></li></ul></div></div></div><div id='method-id' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-method-id' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-method-id' class='name expandable'>id</a>( <span class='pre'>Record rec</span> ) : String</div><div class='description'><div class='short'>Generates a sequential id. ...</div><div class='long'><p>Generates a sequential id. This method is typically called when a record is created\nand no id has been specified. The returned id takes the form:\n<tt>&#123;PREFIX}-&#123;AUTO_ID}</tt>.<div class=\"mdetail-params\"><ul>\n<li><b><tt>PREFIX</tt></b> : String<p class=\"sub-desc\"><tt>Ext.data.Model.PREFIX</tt>\n(defaults to <tt>'ext-record'</tt>)</p></li>\n<li><b><tt>AUTO_ID</tt></b> : String<p class=\"sub-desc\"><tt><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>.AUTO_ID</tt>\n(defaults to <tt>1</tt> initially)</p></li>\n</ul></div></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rec</span> : Record<div class='sub-desc'><p>The record being created.  The record does not exist, it's a <a href=\"#!/api/Ext.data.Model-property-phantom\" rel=\"Ext.data.Model-property-phantom\" class=\"docClass\">phantom</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>auto-generated string id, <tt>\"ext-record-i++'</tt>;</p>\n</div></li></ul></div></div></div><div id='method-isModified' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Stateful' rel='Ext.util.Stateful' class='defined-in docClass'>Ext.util.Stateful</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Stateful-method-isModified' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Stateful-method-isModified' class='name expandable'>isModified</a>( <span class='pre'>String fieldName</span> ) : Boolean</div><div class='description'><div class='short'>Returns true if the passed field name has been modified\nsince the load or last commit. ...</div><div class='long'><p>Returns <tt>true</tt> if the passed field name has been <code><a href=\"#!/api/Ext.util.Stateful-property-modified\" rel=\"Ext.util.Stateful-property-modified\" class=\"docClass\">modified</a></code>\nsince the load or last commit.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fieldName</span> : String<div class='sub-desc'><p><a href=\"#!/api/Ext.data.Field-cfg-name\" rel=\"Ext.data.Field-cfg-name\" class=\"docClass\">Ext.data.Field.name</a></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-join' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-method-join' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-method-join' class='name expandable'>join</a>( <span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> store</span> )</div><div class='description'><div class='short'>Tells this model instance that it has been added to a store ...</div><div class='long'><p>Tells this model instance that it has been added to a store</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store</span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a><div class='sub-desc'><p>The store that the model has been added to</p>\n</div></li></ul></div></div></div><div id='method-markDirty' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Stateful' rel='Ext.util.Stateful' class='defined-in docClass'>Ext.util.Stateful</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Stateful-method-markDirty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Stateful-method-markDirty' class='name expandable'>markDirty</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-on' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-on' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-on' class='name expandable'>on</a>( <span class='pre'>String eventName, Function handler, [Object scope], [Object options]</span> )</div><div class='description'><div class='short'>Appends an event handler to this object (shorthand for addListener.) ...</div><div class='long'><p>Appends an event handler to this object (shorthand for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The type of event to listen for</p>\n</div></li><li><span class='pre'>handler</span> : Function<div class='sub-desc'><p>The method the event invokes</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (<code><b>this</b></code> reference) in which the handler function is executed.\n<b>If omitted, defaults to the object which fired the event.</b></p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>An object containing handler configuration.</p>\n</div></li></ul></div></div></div><div id='method-purgeListeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-purgeListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-purgeListeners' class='name expandable'>purgeListeners</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-purgeManagedListeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-purgeManagedListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-purgeManagedListeners' class='name expandable'>purgeManagedListeners</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-reject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Stateful' rel='Ext.util.Stateful' class='defined-in docClass'>Ext.util.Stateful</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Stateful-method-reject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Stateful-method-reject' class='name expandable'>reject</a>( <span class='pre'>[Boolean silent]</span> )</div><div class='description'><div class='short'>Usually called by the Ext.data.Store to which this model instance has been joined. ...</div><div class='long'><p>Usually called by the <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> to which this model instance has been joined.\nRejects all changes made to the model instance since either creation, or the last commit operation.\nModified fields are reverted to their original values.</p>\n\n<p>Developers should subscribe to the <a href=\"#!/api/Ext.data.Store-event-update\" rel=\"Ext.data.Store-event-update\" class=\"docClass\">Ext.data.Store.update</a> event\nto have their code notified of reject operations.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>silent</span> : Boolean (optional)<div class='sub-desc'><p>True to skip notification of the owning\nstore of the change (defaults to false)</p>\n</div></li></ul></div></div></div><div id='method-relayEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-relayEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-relayEvents' class='name expandable'>relayEvents</a>( <span class='pre'>Object o, <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> events</span> )</div><div class='description'><div class='short'>Relays selected events from the specified Observable as if the events were fired by this. ...</div><div class='long'><p>Relays selected events from the specified Observable as if the events were fired by <tt><b>this</b></tt>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object<div class='sub-desc'><p>The Observable whose events this object is to relay.</p>\n</div></li><li><span class='pre'>events</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>Array of event names to relay.</p>\n</div></li></ul></div></div></div><div id='method-removeListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-removeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-removeListener' class='name expandable'>removeListener</a>( <span class='pre'>String eventName, Function handler, [Object scope]</span> )</div><div class='description'><div class='short'>Removes an event handler. ...</div><div class='long'><p>Removes an event handler.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The type of event the handler was associated with.</p>\n</div></li><li><span class='pre'>handler</span> : Function<div class='sub-desc'><p>The handler to remove. <b>This must be a reference to the function passed into the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</b></p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope originally specified for the handler.</p>\n</div></li></ul></div></div></div><div id='method-removeManagedListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-removeManagedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-removeManagedListener' class='name expandable'>removeManagedListener</a>( <span class='pre'>Observable|Element item, Object|String ename, Function fn, Object scope</span> )</div><div class='description'><div class='short'>Removes listeners that were added by the mon method. ...</div><div class='long'><p>Removes listeners that were added by the mon method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : Observable|Element<div class='sub-desc'><p>The item from which to remove a listener/listeners.</p>\n</div></li><li><span class='pre'>ename</span> : Object|String<div class='sub-desc'><p>The event name, or an object containing event name properties.</p>\n</div></li><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>Optional. If the <code>ename</code> parameter was an event name, this\nis the handler function.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>Optional. If the <code>ename</code> parameter was an event name, this\nis the scope (<code>this</code> reference) in which the handler function is executed.</p>\n</div></li></ul></div></div></div><div id='method-resumeEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-resumeEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-resumeEvents' class='name expandable'>resumeEvents</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Resume firing events. ...</div><div class='long'><p>Resume firing events. (see <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>)\nIf events were suspended using the <tt><b>queueSuspended</b></tt> parameter, then all\nevents fired during event suspension will be sent to any listeners now.</p>\n</div></div></div><div id='method-save' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-method-save' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-method-save' class='name expandable'>save</a>( <span class='pre'>Object options</span> ) : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a></div><div class='description'><div class='short'>Saves the model instance using the configured proxy ...</div><div class='long'><p>Saves the model instance using the configured proxy</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>Options to pass to the proxy</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a></span><div class='sub-desc'><p>The Model instance</p>\n</div></li></ul></div></div></div><div id='method-set' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Stateful' rel='Ext.util.Stateful' class='defined-in docClass'>Ext.util.Stateful</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Stateful-method-set' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Stateful-method-set' class='name expandable'>set</a>( <span class='pre'>String|Object fieldName, Mixed value</span> )</div><div class='description'><div class='short'>Sets the given field to the given value, marks the instance as dirty ...</div><div class='long'><p>Sets the given field to the given value, marks the instance as dirty</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fieldName</span> : String|Object<div class='sub-desc'><p>The field to set, or an object containing key/value pairs</p>\n</div></li><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to set</p>\n</div></li></ul></div></div></div><div id='method-setDirty' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Stateful' rel='Ext.util.Stateful' class='defined-in docClass'>Ext.util.Stateful</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Stateful-method-setDirty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Stateful-method-setDirty' class='name expandable'>setDirty</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Marks this Record as dirty. ...</div><div class='long'><p>Marks this <b>Record</b> as <code><a href=\"#!/api/Ext.util.Stateful-property-dirty\" rel=\"Ext.util.Stateful-property-dirty\" class=\"docClass\">dirty</a></code>.  This method\nis used interally when adding <code>phantom</code> records to a\nwriter enabled store.</p>\n\n\n<br><p>Marking a record <code><a href=\"#!/api/Ext.util.Stateful-property-dirty\" rel=\"Ext.util.Stateful-property-dirty\" class=\"docClass\">dirty</a></code> causes the phantom to\n\n\n<p>be returned by Ext.data.Store.getModifiedRecords where it will\nhave a create action composed for it during <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">store save</a>\noperations.</p></p>\n</div></div></div><div id='method-setId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-method-setId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-method-setId' class='name expandable'>setId</a>( <span class='pre'>Number id</span> )</div><div class='description'><div class='short'>Sets the model instance's id field to the given id ...</div><div class='long'><p>Sets the model instance's id field to the given id</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>The new id</p>\n</div></li></ul></div></div></div><div id='method-setProxy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-method-setProxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-method-setProxy' class='name expandable'>setProxy</a>( <span class='pre'>String/Object/<a href=\"#!/api/Ext.data.Proxy\" rel=\"Ext.data.Proxy\" class=\"docClass\">Ext.data.Proxy</a> proxy</span> )</div><div class='description'><div class='short'>Sets the Proxy to use for this model. ...</div><div class='long'><p>Sets the Proxy to use for this model. Accepts any options that can be accepted by Ext.data.ProxyMgr.create</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>proxy</span> : String/Object/<a href=\"#!/api/Ext.data.Proxy\" rel=\"Ext.data.Proxy\" class=\"docClass\">Ext.data.Proxy</a><div class='sub-desc'><p>The proxy</p>\n</div></li></ul></div></div></div><div id='method-suspendEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-suspendEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-suspendEvents' class='name expandable'>suspendEvents</a>( <span class='pre'>Boolean queueSuspended</span> )</div><div class='description'><div class='short'>Suspend the firing of all events. ...</div><div class='long'><p>Suspend the firing of all events. (see <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>queueSuspended</span> : Boolean<div class='sub-desc'><p>Pass as true to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events;</p>\n</div></li></ul></div></div></div><div id='method-un' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-util-Observable-method-un' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-un' class='name expandable'>un</a>( <span class='pre'>String eventName, Function handler, [Object scope]</span> )</div><div class='description'><div class='short'>Removes an event handler (shorthand for removeListener.) ...</div><div class='long'><p>Removes an event handler (shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeListener\" rel=\"Ext.util.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The type of event the handler was associated with.</p>\n</div></li><li><span class='pre'>handler</span> : Function<div class='sub-desc'><p>The handler to remove. <b>This must be a reference to the function passed into the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</b></p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope originally specified for the handler.</p>\n</div></li></ul></div></div></div><div id='method-unjoin' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-method-unjoin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-method-unjoin' class='name expandable'>unjoin</a>( <span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> store</span> )</div><div class='description'><div class='short'>Tells this model instance that it has been removed from the store ...</div><div class='long'><p>Tells this model instance that it has been removed from the store</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store</span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a><div class='sub-desc'><p>The store to unjoin</p>\n</div></li></ul></div></div></div><div id='method-validate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-method-validate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-method-validate' class='name expandable'>validate</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.data.Errors\" rel=\"Ext.data.Errors\" class=\"docClass\">Ext.data.Errors</a></div><div class='description'><div class='short'>Validates the current data against all of its configured validations and returns an\nErrors object ...</div><div class='long'><p>Validates the current data against all of its configured validations and returns an\n<a href=\"#!/api/Ext.data.Errors\" rel=\"Ext.data.Errors\" class=\"docClass\">Errors</a> object</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Errors\" rel=\"Ext.data.Errors\" class=\"docClass\">Ext.data.Errors</a></span><div class='sub-desc'><p>The errors object</p>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Methods</h3><div id='static-method-load' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Model'>Ext.data.Model</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-data-Model-static-method-load' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Model-static-method-load' class='name expandable'>load</a>( <span class='pre'>Number id, Object config</span> )<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Static. ...</div><div class='long'><p><b>Static</b>. Asynchronously loads a model instance by id. Sample usage:</p>\n\n<pre><code>MyApp.User = <a href=\"#!/api/Ext-method-regModel\" rel=\"Ext-method-regModel\" class=\"docClass\">Ext.regModel</a>('User', {\n    fields: [\n        {name: 'id', type: 'int'},\n        {name: 'name', type: 'string'}\n    ]\n});\n\nMyApp.User.load(10, {\n    scope: this,\n    failure: function(record, operation) {\n        //do something if the load failed\n    },\n    success: function(record, operation) {\n        //do something if the load succeeded\n    },\n    callback: function(record, operation) {\n        //do something whether the load succeeded or failed\n    }\n});\n</code></pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>The id of the model to load</p>\n</div></li><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>Optional config object containing success, failure and callback functions, plus optional scope</p>\n</div></li></ul></div></div></div></div></div></div></div>"});