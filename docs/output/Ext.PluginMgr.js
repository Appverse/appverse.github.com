Ext.data.JsonP.Ext_PluginMgr({"tagname":"class","name":"Ext.PluginMgr","extends":"Ext.AbstractManager","mixins":[],"alternateClassNames":[],"aliases":{},"singleton":true,"requires":[],"uses":[],"enum":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-Ext.PluginMgr","members":{"cfg":[],"property":[],"method":[{"name":"create","tagname":"method","owner":"Ext.PluginMgr","meta":{},"id":"method-create"},{"name":"findByType","tagname":"method","owner":"Ext.PluginMgr","meta":{},"id":"method-findByType"}],"event":[],"css_var":[],"css_mixin":[]},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"linenr":6158,"files":[{"filename":"sencha-touch-debug-w-comments.js","href":"sencha-touch-debug-w-comments.html#Ext-PluginMgr"}],"html_meta":{},"component":false,"superclasses":["Ext.AbstractManager"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.AbstractManager<div class='subclass '><strong>Ext.PluginMgr</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/sencha-touch-debug-w-comments.html#Ext-PluginMgr' target='_blank'>sencha-touch-debug-w-comments.js</a></div></pre><div class='doc-contents'><p>Provides a registry of available Plugin <i>classes</i> indexed by a mnemonic code known as the Plugin's ptype.\nThe <code>xtype</code> provides a way to avoid instantiating child Components\nwhen creating a full, nested config object for a complete Ext page.</p>\n\n\n<p>A child Component may be specified simply as a <i>config object</i>\nas long as the correct <code>xtype</code> is specified so that if and when the Component\nneeds rendering, the correct type can be looked up for lazy instantiation.</p>\n\n\n<p>For a list of all available <code>xtypes</code>, see <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>.</p>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-create' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.PluginMgr'>Ext.PluginMgr</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-PluginMgr-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.PluginMgr-method-create' class='name expandable'>create</a>( <span class='pre'>Object config, Constructor defaultType</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>Creates a new Plugin from the specified config object using the\nconfig object's ptype to determine the class to insta...</div><div class='long'><p>Creates a new Plugin from the specified config object using the\nconfig object's ptype to determine the class to instantiate.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>A configuration object for the Plugin you wish to create.</p>\n</div></li><li><span class='pre'>defaultType</span> : Constructor<div class='sub-desc'><p>The constructor to provide the default Plugin type if\nthe config object does not contain a <code>ptype</code>. (Optional if the config contains a <code>ptype</code>).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>The newly instantiated Plugin.</p>\n</div></li></ul></div></div></div><div id='method-findByType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.PluginMgr'>Ext.PluginMgr</span><br/><a href='source/sencha-touch-debug-w-comments.html#Ext-PluginMgr-method-findByType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.PluginMgr-method-findByType' class='name expandable'>findByType</a>( <span class='pre'>String type, Boolean defaultsOnly</span> ) : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></div><div class='description'><div class='short'>Returns all plugins registered with the given type. ...</div><div class='long'><p>Returns all plugins registered with the given type. Here, 'type' refers to the type of plugin, not its ptype.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String<div class='sub-desc'><p>The type to search for</p>\n</div></li><li><span class='pre'>defaultsOnly</span> : Boolean<div class='sub-desc'><p>True to only return plugins of this type where the plugin's isDefault property is truthy</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></span><div class='sub-desc'><p>All matching plugins</p>\n</div></li></ul></div></div></div></div></div></div></div>"});