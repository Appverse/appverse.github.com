Ext.data.JsonP.Unity_IO_Async({"tagname":"class","name":"Unity.IO.Async","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-Unity.IO.Async","members":{"cfg":[],"property":[],"method":[{"name":"GetService","tagname":"method","owner":"Unity.IO.Async","meta":{},"id":"method-GetService"},{"name":"GetServices","tagname":"method","owner":"Unity.IO.Async","meta":{},"id":"method-GetServices"},{"name":"InvokeService","tagname":"method","owner":"Unity.IO.Async","meta":{},"id":"method-InvokeService"}],"event":[],"css_var":[],"css_mixin":[]},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"linenr":2212,"files":[{"filename":"unity.js","href":"unity.html#Unity-IO-Async"}],"html_meta":{},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/unity.html#Unity-IO-Async' target='_blank'>unity.js</a></div></pre><div class='doc-contents'><p>Invokes all IO API methods asynchronously.\nCallback function is passed to the methods (last argument) to handle the result object when it is received from unity runtime.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-GetService' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Unity.IO.Async'>Unity.IO.Async</span><br/><a href='source/unity.html#Unity-IO-Async-method-GetService' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Unity.IO.Async-method-GetService' class='name expandable'>GetService</a>( <span class='pre'>String serviceName, int serviceType, Object callbackFunction</span> )</div><div class='description'><div class='short'>Gets ASYNC the I/O Service that matches the given name, and type (if provided). ...</div><div class='long'><p>Gets ASYNC the I/O Service that matches the given name, and type (if provided). It is possible to define two services with the same name, but different type.</p>\n\n<br> @version 2.0\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>serviceName</span> : String<div class='sub-desc'><p>The service name to look for.</p>\n</div></li><li><span class='pre'>serviceType</span> : int<div class='sub-desc'><p>The service type to look for. Optional parameter.</p>\n</div></li><li><span class='pre'>callbackFunction</span> : Object<div class='sub-desc'><p>The function object to be called when the method response is handled. Argument to this function is the invocation result object: \"IOService\" The external service matched.</p>\n</div></li></ul></div></div></div><div id='method-GetServices' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Unity.IO.Async'>Unity.IO.Async</span><br/><a href='source/unity.html#Unity-IO-Async-method-GetServices' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Unity.IO.Async-method-GetServices' class='name expandable'>GetServices</a>( <span class='pre'>Object callbackFunction</span> )</div><div class='description'><div class='short'>Gets ASYNC the configured I/O services (the ones configured on the '/app/config/io-services-config.xml' file). ...</div><div class='long'><p>Gets ASYNC the configured I/O services (the ones configured on the '/app/config/io-services-config.xml' file).</p>\n\n<br> @version 2.0\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callbackFunction</span> : Object<div class='sub-desc'><p>The function object to be called when the method response is handled. Argument to this function is the invocation result object: IOService[] List of external services.</p>\n</div></li></ul></div></div></div><div id='method-InvokeService' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Unity.IO.Async'>Unity.IO.Async</span><br/><a href='source/unity.html#Unity-IO-Async-method-InvokeService' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Unity.IO.Async-method-InvokeService' class='name expandable'>InvokeService</a>( <span class='pre'>IORequestObject requestObjt, String/IOService service, int serviceType, Object callbackFunction</span> )</div><div class='description'><div class='short'>Invokes ASYNC the I/O Service that matches the given service name (or service object reference), and type (if provided). ...</div><div class='long'><p>Invokes ASYNC the I/O Service that matches the given service name (or service object reference), and type (if provided).</p>\n\n<br> @version 2.0\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>requestObjt</span> : IORequestObject<div class='sub-desc'><p>The request object with the needed invocation parameters. Example:</p>\n\n<pre>{\"Session\":null,\"Content\":\"{method:authenticationService.login,id:1,params:['username','password']}\"}</pre>\n\n</div></li><li><span class='pre'>service</span> : String/IOService<div class='sub-desc'><p>This param could be a IOService object (as provided by <a href=\"#!/api/Unity.IO.Async-method-GetService\" rel=\"Unity.IO.Async-method-GetService\" class=\"docClass\">GetService</a>), or only the service name. First service match would be invoked.</p>\n</div></li><li><span class='pre'>serviceType</span> : int<div class='sub-desc'><p>The service type to look for. Optional parameter.</p>\n</div></li><li><span class='pre'>callbackFunction</span> : Object<div class='sub-desc'><p>The function object to be called when the method response is handled. Argument to this function is the invocation result object: IOResponse The response object returned from remote service. Access content doing:</p>\n\n<pre>ioResponse.Content</pre>\n\n\n<p>.</p>\n</div></li></ul></div></div></div></div></div></div></div>"});